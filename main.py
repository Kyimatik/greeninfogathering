import json
import asyncio
import logging
import sys
import os 

 
from aiogram import Bot, Dispatcher, Router, types , F 
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart , Command
from aiogram.types import Message , CallbackQuery ,FSInputFile
from aiogram.types import ReplyKeyboardMarkup , InlineKeyboardMarkup , InlineKeyboardButton ,ReplyKeyboardRemove 
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup , State
import pytz 
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
from apscheduler.triggers.date import DateTrigger
from datetime import datetime


USER_FILE = r"test.txt"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def load_users():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å—Ç—Ä–æ—á–Ω–æ –∏–∑ —Ñ–∞–π–ª–∞."""
    if os.path.exists(USER_FILE):
        with open(USER_FILE, 'r', encoding='utf-8') as file:
            return file.readlines()  # –°—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ —Å–ø–∏—Å–æ–∫
    return []  # –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫


def save_user(user_id):
    with open(USER_FILE, 'a') as file:
        file.write(f"{user_id}\n")









# TOKEN = "?"
TOKEN = "?"

bot = Bot(TOKEN)
dp = Dispatcher()
router = Router()

presentation = "BQACAgQAAxkBAAMVZ2K9-ziBzbYQ0vBAARuneY3e-sIAAsEUAAJbrxhTBuOzVoADs-Y2BA" # –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è 

# –ö–Ω–æ–ø–æ—á–∫–∞ , –¥–ª—è –Ω–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π 
vseverno = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="""–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ üéÅ""",url="https://t.me/green24official_bot?start")
        ]
    ],
    resize_keyboard=True
)

yesiwant = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="""–î–∞ —è —Ö–æ—á—É —É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å ü§©""",callback_data="YES")
        ]
    ],
    resize_keyboard=True
)

class Form(StatesGroup):
    form = State()

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –∫–Ω–æ–ø–∫–æ–π 
@dp.message(F.text.lower() == "–∞")
async def getstarted(message: Message):
    await message.answer("""–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! üéâ 20 –¥–µ–∫–∞–±—Ä—è —Å–æ—Å—Ç–æ–∏—Ç—Å—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –¥–ª—è –±–∞–π–µ—Ä–æ–≤ –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ Green Brand. –ú—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏:
 ‚Ä¢ –≠–∫—Å–∫—É—Ä—Å–∏—é –ø–æ –Ω–∞—à–µ–º—É —Ü–µ—Ö—É –∏ –≥–æ–ª–æ–≤–Ω–æ–º—É –æ—Ñ–∏—Å—É,
 ‚Ä¢ –†–∞–∑–±–æ—Ä –±–æ–ª–µ–π –±–∞–π–µ—Ä–æ–≤ –∏ —Å–µ–ª–ª–µ—Ä–æ–≤,
 ‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –¥–ª—è —Ä–æ—Å—Ç–∞ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.
 ‚Ä¢ –ò–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∑–∞–∫—É–ø–∫–∞—Ö,
 ‚Ä¢ –ù–∞–π—Ç–∏ –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–æ—Å—Ç–∞,
 ‚Ä¢ –£–≤–∏–¥–µ—Ç—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –ª—É—á—à–∏–µ –≤ —Å–≤–æ–µ–º –¥–µ–ª–µ.
 ‚Ä¢ –ö–∞–∫–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏ –º–µ—à–∞—é—Ç –±–∞–π–µ—Ä–∞–º —ç–∫–æ–Ω–æ–º–∏—Ç—å,
 ‚Ä¢ –ö–∞–∫ –≤—ã—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —Å —Å–µ–ª–ª–µ—Ä–∞–º–∏,
 ‚Ä¢ –ò –ø–æ–∫–∞–∂–µ–º –Ω–∞—à –ø—Ä–æ—Ü–µ—Å—Å –∏–∑–Ω—É—Ç—Ä–∏.

–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ? –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ
""",reply_markup=vseverno,parse_mode="HTML")



@dp.message(Command("start"))
async def getstarted(message: Message):
    usid = str(message.from_user.id)
    users = load_users()
    if usid not in users:
        save_user(usid)
        print("–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    await message.answer_document(presentation)
    await message.answer("""–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–µ–º—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—é!

–í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é, –≥–¥–µ –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å—Å–∫–∞–∑–∞–Ω–æ –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ —Å–æ–±—ã—Ç–∏—è, –º–µ—Å—Ç–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏ –∫–ª—é—á–µ–≤—ã—Ö –º–æ–º–µ–Ω—Ç–∞—Ö.

–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª –∏ –æ—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞–º 20 –¥–µ–∫–∞–±—Ä—è. –ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å!

–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –∫–æ–º–∞–Ω–¥–∞ <b>Green Brand</b>. ü§ó""",reply_markup=yesiwant,parse_mode="HTML")




@dp.callback_query(lambda callback_query: callback_query.data == "YES")
async def pricecount(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("<b>–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è - –Ω–æ–º–µ—Ä</b>\n<i>–ü—Ä–∏–º–µ—Ä:–ê–∑–∞–º–∞—Ç - 0782444555</i>",parse_mode="HTML")
    await state.set_state(Form.form)

@dp.message(Form.form)
async def savetotxtfile(message: Message,state: FSMContext):
    user_text = message.text
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª, –µ—Å–ª–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    file_path = 'greenevent.txt'
    if not os.path.exists(file_path):
        with open(file_path, 'w', encoding='utf-8') as file:
            pass  # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤ —Ñ–∞–π–ª
    with open(file_path, 'a', encoding='utf-8') as file:
        file.write(f'{user_text}\n')  # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –≤ —Ñ–∞–π–ª, –∫–∞–∂–¥–æ–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ
    await state.clear()
    await message.answer("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ.")









@dp.message(F.content_type.in_({'document'}))
async def getid(message: Message):
    await message.answer(message.document.file_id)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID
def get_unique_user_ids(filename):
    with open(filename, "r", encoding="utf-8") as file:
        lines = file.readlines()
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ set, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã
        unique_ids = set(line.strip() for line in lines if line.strip().isdigit())
    return unique_ids


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
async def send_messages_to_users():
    text = """
<b>–í–Ω–∏–º–∞–Ω–∏–µ, –¥—Ä—É–∑—å—è!</b>

–°–µ–≥–æ–¥–Ω—è, <b>20 –¥–µ–∫–∞–±—Ä—è</b>, –ø—Ä–æ–π–¥–µ—Ç –Ω–∞—à –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω—ã–π –∏–≤–µ–Ω—Ç ¬´–¢—É—Ä –¥–ª—è –ë–∞–π–µ—Ä–æ–≤¬ª –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ Green, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ç–æ—á–Ω–æ –Ω–µ –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å! –ï—Å–ª–∏ –≤—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å, –≤–∞—à–µ –∏–º—è –≤ —Å–ø–∏—Å–∫–µ, –∏ –º—ã —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º –∂–¥–µ–º –≤—Å—Ç—Ä–µ—á–∏ —Å –≤–∞–º–∏.

–ù–æ —É –Ω–∞—Å –µ—Å—Ç—å –¥–≤–µ –≤–∞–∂–Ω—ã–µ –ø—Ä–æ—Å—å–±—ã:

<b>1Ô∏è‚É£ –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫—É—é –∞–Ω–∫–µ—Ç—É</b> ‚Äî —ç—Ç–æ –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ –ø–∞—Ä—É –º–∏–Ω—É—Ç, –Ω–æ –≤–∞—à–∞ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –¥–ª—è –Ω–∞—Å –±–µ—Å—Ü–µ–Ω–Ω–∞.
üëâ –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å (https://forms.gle/xgNipWG3cF657NoA6)

<b>2Ô∏è‚É£ –ï—Å–ª–∏ –≤—ã –µ—â–µ –Ω–µ —É—Å–ø–µ–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É—á–∞—Å—Ç–∏–µ –Ω–∞ –∏–≤–µ–Ω—Ç ¬´–¢—É—Ä –¥–ª—è –ë–∞–π–µ—Ä–æ–≤¬ª</b>, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ–π –ø—Ä–∏—Ö–æ–¥ –¥–æ 11:00 –ø–æ —Å—Å—ã–ª–∫–µ:
üëâ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É—á–∞—Å—Ç–∏–µ (https://t.me/green24official_bot?start)

–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∏ —Å–¥–µ–ª–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –µ—â–µ –ª—É—á—à–µ –¥–ª—è –≤–∞—Å!

–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å! –î–æ –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ –∏–≤–µ–Ω—Ç–µ!
"""
    user_ids = get_unique_user_ids("test.txt")
    print(user_ids)
    for user_id in user_ids:
        try:
            await bot.send_message(chat_id=int(user_id), text=f"{text}",parse_mode="HTML")
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")


@dp.message(F.text.lower() == "—Ñ–∞–π–ª")
async def getfile(message: Message):
    all_media_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'Green Mail')
    # txtfile = FSInputFile(path=os.path.join(all_media_dir, 'users.txt'))
    txtfile = FSInputFile(r"C:\Users\echoe\OneDrive\Documents\Green Mail\greenevent.txt")
    await message.answer_document(document=txtfile) # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–∞–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è 


@dp.message(Command("san"))
async def getsan(message : Message):
    text = """
<b>–í–Ω–∏–º–∞–Ω–∏–µ, –¥—Ä—É–∑—å—è!</b>

–°–µ–≥–æ–¥–Ω—è, <b>20 –¥–µ–∫–∞–±—Ä—è</b>, –ø—Ä–æ–π–¥–µ—Ç –Ω–∞—à –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω—ã–π –∏–≤–µ–Ω—Ç ¬´–¢—É—Ä –¥–ª—è –ë–∞–π–µ—Ä–æ–≤¬ª –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ Green, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ç–æ—á–Ω–æ –Ω–µ –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å! –ï—Å–ª–∏ –≤—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å, –≤–∞—à–µ –∏–º—è –≤ —Å–ø–∏—Å–∫–µ, –∏ –º—ã —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º –∂–¥–µ–º –≤—Å—Ç—Ä–µ—á–∏ —Å –≤–∞–º–∏.

–ù–æ —É –Ω–∞—Å –µ—Å—Ç—å –¥–≤–µ –≤–∞–∂–Ω—ã–µ –ø—Ä–æ—Å—å–±—ã:

<b>1Ô∏è‚É£ –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫—É—é –∞–Ω–∫–µ—Ç—É</b> ‚Äî —ç—Ç–æ –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ –ø–∞—Ä—É –º–∏–Ω—É—Ç, –Ω–æ –≤–∞—à–∞ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –¥–ª—è –Ω–∞—Å –±–µ—Å—Ü–µ–Ω–Ω–∞.
üëâ –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å (https://forms.gle/xgNipWG3cF657NoA6)

<b>2Ô∏è‚É£ –ï—Å–ª–∏ –≤—ã –µ—â–µ –Ω–µ —É—Å–ø–µ–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É—á–∞—Å—Ç–∏–µ –Ω–∞ –∏–≤–µ–Ω—Ç ¬´–¢—É—Ä –¥–ª—è –ë–∞–π–µ—Ä–æ–≤¬ª</b>, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ–π –ø—Ä–∏—Ö–æ–¥ –¥–æ 11:00 –ø–æ —Å—Å—ã–ª–∫–µ:
üëâ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É—á–∞—Å—Ç–∏–µ (https://t.me/green24official_bot?start)

–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∏ —Å–¥–µ–ª–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –µ—â–µ –ª—É—á—à–µ –¥–ª—è –≤–∞—Å!

–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å! –î–æ –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ –∏–≤–µ–Ω—Ç–µ!
"""
    await bot.send_message(7388391479,text,parse_mode="HTML")




async def main() -> None:
    scheduler = AsyncIOScheduler(timezone="Asia/Bishkek")  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–¥–∞—á—É –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ 20 –¥–µ–∫–∞–±—Ä—è –≤ 9:00
    send_time = datetime(2024, 12, 19, 18, 7)  # –ì–æ–¥, –º–µ—Å—è—Ü, –¥–µ–Ω—å, —á–∞—Å, –º–∏–Ω—É—Ç–∞
    scheduler.add_job(send_messages_to_users,trigger="date", run_date=send_time)

    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –Ω–∞ 20:04 —Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –ø–æ –ø—è—Ç–Ω–∏—Ü—É
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    scheduler.start()
    
    # Initialize Bot instance with a default parse mode which will be passed to all API calls
    
    # And the run events dispatching
    await dp.start_polling(bot)

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(main())